!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ANSI_COLOR_BLUE	color.h	/^#define ANSI_COLOR_BLUE /;"	d
ANSI_COLOR_CYAN	color.h	/^#define ANSI_COLOR_CYAN /;"	d
ANSI_COLOR_GREEN	color.h	/^#define ANSI_COLOR_GREEN /;"	d
ANSI_COLOR_MAGENTA	color.h	/^#define ANSI_COLOR_MAGENTA /;"	d
ANSI_COLOR_RED	color.h	/^#define ANSI_COLOR_RED /;"	d
ANSI_COLOR_RESET	color.h	/^#define ANSI_COLOR_RESET /;"	d
ANSI_COLOR_YELLOW	color.h	/^#define ANSI_COLOR_YELLOW /;"	d
Acreate_content	answer.c	/^char Acreate_content[BUFFER_SIZE]; \/\/\/< Buffer for create-file answer$/;"	v
Acreate_size	answer.c	/^ssize_t Acreate_size;  \/\/\/< Size variable for creater-file size answer$/;"	v
Adelete_content	answer.c	/^char Adelete_content[BUFFER_SIZE]; \/\/\/< Buffer for delete-file answer$/;"	v
Adelete_size	answer.c	/^ssize_t Adelete_size;  \/\/\/< Size variable for delete-file size answer$/;"	v
Arsearch_output	answer.c	/^char Arsearch_output[BUFFER_SIZE]; \/\/\/< Buffer for re-search-output answer$/;"	v
Arsearch_size	answer.c	/^ssize_t Arsearch_size; \/\/\/< Size variable for re-search-output size answer$/;"	v
Asearch_output	answer.c	/^char Asearch_output[BUFFER_SIZE];  \/\/\/< Buffer for search-output answer$/;"	v
Asearch_size	answer.c	/^ssize_t Asearch_size;  \/\/\/< Size variable for search-output size answer$/;"	v
BUFFER_SIZE	answer.h	/^#define BUFFER_SIZE /;"	d
CC	Makefile	/^CC       = gcc -g$/;"	m
CCOPTS	Makefile	/^CCOPTS   = -c #-Wall$/;"	m
Compile	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	e	enum:__anon1	file:
Create	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	e	enum:__anon1	file:
DEPEND	Makefile	/^DEPEND   = makedepend$/;"	m
Delete	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	e	enum:__anon1	file:
ID_LENGTH	grading.h	/^#define ID_LENGTH /;"	d
LDFLAGS	Makefile	/^LDFLAGS  = -pthread$/;"	m
LINK	Makefile	/^LINK     = gcc -g$/;"	m
LINKOPTS	Makefile	/^LINKOPTS = -lm $/;"	m
NUM_OF_SECTOR	grading.h	/^#define NUM_OF_SECTOR /;"	d
OBJECTS	Makefile	/^OBJECTS = grading.o test.o answer.o color.o$/;"	m
RSearch	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	e	enum:__anon1	file:
SOURCES	Makefile	/^SOURCES = grading.c test.c answer.c color.c$/;"	m
Search	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	e	enum:__anon1	file:
Sectors	grading.c	/^enum {Compile = 0, Create, Search, Delete, RSearch} Sectors; $/;"	v	typeref:enum:__anon1
TARGET	Makefile	/^TARGET   = grading$/;"	m
compile_ans	answer.c	/^void compile_ans(void)$/;"	f
cur_pid	grading.c	/^pid_t cur_pid; \/\/\/< Currrent running child process pid, which is student's executable files.$/;"	v
do_grading	grading.c	/^void do_grading(int *score)$/;"	f
filter	grading.c	/^int filter(const struct dirent *info)$/;"	f
finished	grading.c	/^int finished[10000]; $/;"	v
green	color.c	/^void green(char *s) $/;"	f
hsh_fname	answer.c	/^const char *hsh_fname = "student.hsh";             \/\/\/< file name for file to create$/;"	v
init_answer	answer.c	/^void init_answer(void)$/;"	f
main	grading.c	/^int main(void)$/;"	f
print_file	test.c	/^void print_file(char *buf)$/;"	f
red	color.c	/^void red(char *s) $/;"	f
rsearch_fname	answer.c	/^const char *rsearch_fname = "rsearch_output.txt";  \/\/\/< file name for output result of re-search$/;"	v
search_fname	answer.c	/^const char *search_fname = "search_output.txt";    \/\/\/< file name for output result of search$/;"	v
set_create_ans	answer.c	/^void set_create_ans(void)$/;"	f
set_delete_ans	answer.c	/^void set_delete_ans(void)$/;"	f
set_rsearch_ans	answer.c	/^void set_rsearch_ans(void)$/;"	f
set_search_ans	answer.c	/^void set_search_ans(void)$/;"	f
signal_handler	grading.c	/^void signal_handler(int sig)$/;"	f
test_compile	test.c	/^int test_compile(void)$/;"	f
test_create	test.c	/^int test_create(void)$/;"	f
test_delete	test.c	/^int test_delete(void)$/;"	f
test_ptr	grading.c	/^int (*test_ptr[])(void) = {test_compile, test_create, test_search, test_delete, test_rsearch}; \/\/\/< Function pointer for functions that compare answer to files student made.$/;"	v
test_rsearch	test.c	/^int test_rsearch(void)$/;"	f
test_search	test.c	/^int test_search(void) $/;"	f
yellow	color.c	/^void yellow(char *s) $/;"	f
